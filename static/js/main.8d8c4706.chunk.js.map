{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","currentIndex","setCurrentIndex","carouselRef","useRef","intervalRef","handleNext","nextIndex","length","useEffect","carousel","current","translateValue","style","transition","transform","window","setInterval","clearInterval","className","width","ref","slice","map","image","index","src","alt","String","type","onClick","prevIndex","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"qMAuGeA,EA1F2B,SAAC,GAOpC,IANLC,EAMI,EANJA,OAMI,IALJC,iBAKI,MALQ,IAKR,MAJJC,iBAII,MAJQ,EAIR,MAHJC,YAGI,MAHG,EAGH,MAFJC,yBAEI,MAFgB,IAEhB,MADJC,gBACI,SACJ,EAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcC,iBAAuB,MACrCC,EAAcD,iBAAsB,MAEpCE,EAAa,WACjB,IAAMC,EAAYN,EAAeJ,EAEjCK,EAAgBK,EAAYb,EAAOc,OAASZ,EACxCF,EAAOc,OAASZ,EAChBW,IASNE,qBAAU,WACR,IAAMC,EAAWP,EAAYQ,QAE7B,GAAID,EAAU,CACZ,IAAME,GAAkBjB,EAAYM,EAEpCS,EAASG,MAAMC,WAAf,oBAAyChB,EAAoB,IAA7D,UACAY,EAASG,MAAME,UAAf,qBAAyCH,EAAzC,UAED,CAACX,EAAcN,EAAWG,IAE7BW,qBAAU,WAOR,OANIV,IACFM,EAAYM,QAAUK,OAAOC,aAAY,WACvCX,MACCR,IAGE,WACDO,EAAYM,SACdO,cAAcb,EAAYM,YAG7B,CAACZ,EAAUO,EAAYR,IAY1B,OACE,sBAAKqB,UAAU,WAAf,UACE,qBAAKA,UAAU,sBAAsBN,MAAO,CAAEO,MAAM,GAAD,OAAKzB,EAAYC,EAAjB,OAAnD,SACE,qBAAKyB,IAAKlB,EAAV,SACE,oBAAIgB,UAAU,iBAAd,SAbezB,EAAO4B,MAAMrB,EAAcA,EAAeL,GAE3C2B,KAAI,SAACC,EAAOC,GAAR,OACtB,oBAAgBZ,MAAO,CAAEO,MAAM,GAAD,OAAKzB,EAAL,OAA9B,SACE,qBAAK+B,IAAKF,EAAOG,IAAKC,OAAOH,MADtBD,YAgBT,wBACEK,KAAK,SACLC,QArDiB,WACrB,IAAMC,EAAY9B,EAAeJ,EAEjCK,EAAgB6B,EAAY,EAAI,EAAIA,IAmDhCC,SAA2B,IAAjB/B,EAHZ,sBAOA,wBACE4B,KAAK,SACLC,QAASxB,EACT0B,SAAU/B,GAAgBP,EAAOc,OAASZ,IAAcG,EACxD,UAAQ,OAJV,sBCvFAL,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAmBauC,EAhBO,WACpB,OACE,sBAAKd,UAAU,MAAf,UACE,oBAAI,UAAQ,QAAZ,iCAAsCzB,EAAOc,OAA7C,aACA,cAAC,EAAD,CACEd,OAAQA,EACRC,UAAW,IACXC,UAAW,EACXC,KAAM,EACNC,kBAAmB,IACnBC,UAAU,QCxBlBmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.8d8c4706.chunk.js","sourcesContent":["/* eslint-disable react/require-default-props */\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Carousel.scss';\n\ninterface CarouselProps {\n  images: string[];\n  itemWidth?: number;\n  frameSize?: number;\n  step?: number;\n  animationDuration?: number;\n  infinite?: boolean;\n}\n\nconst Carousel: React.FC<CarouselProps> = ({\n  images,\n  itemWidth = 130,\n  frameSize = 3,\n  step = 3,\n  animationDuration = 1000,\n  infinite = true,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const carouselRef = useRef<HTMLDivElement>(null);\n  const intervalRef = useRef<number | null>(null);\n\n  const handleNext = () => {\n    const nextIndex = currentIndex + step;\n\n    setCurrentIndex(nextIndex > images.length - frameSize\n      ? images.length - frameSize\n      : nextIndex);\n  };\n\n  const handlePrevious = () => {\n    const prevIndex = currentIndex - step;\n\n    setCurrentIndex(prevIndex < 0 ? 0 : prevIndex);\n  };\n\n  useEffect(() => {\n    const carousel = carouselRef.current;\n\n    if (carousel) {\n      const translateValue = -itemWidth * currentIndex;\n\n      carousel.style.transition = `transform ${animationDuration / 1000}s ease`;\n      carousel.style.transform = `translateX(${translateValue}px)`;\n    }\n  }, [currentIndex, itemWidth, animationDuration]);\n\n  useEffect(() => {\n    if (infinite) {\n      intervalRef.current = window.setInterval(() => {\n        handleNext();\n      }, animationDuration);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [infinite, handleNext, animationDuration]);\n\n  const renderImages = () => {\n    const slicedImages = images.slice(currentIndex, currentIndex + frameSize);\n\n    return slicedImages.map((image, index) => (\n      <li key={image} style={{ width: `${itemWidth}px` }}>\n        <img src={image} alt={String(index)} />\n      </li>\n    ));\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\" style={{ width: `${itemWidth * frameSize}px` }}>\n        <div ref={carouselRef}>\n          <ul className=\"Carousel__list\">\n            {renderImages()}\n          </ul>\n        </div>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={handlePrevious}\n        disabled={currentIndex === 0}\n      >\n        Previous\n      </button>\n      <button\n        type=\"button\"\n        onClick={handleNext}\n        disabled={currentIndex >= images.length - frameSize && !infinite}\n        data-cy=\"next\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n      <Carousel\n        images={images}\n        itemWidth={130}\n        frameSize={3}\n        step={3}\n        animationDuration={1000}\n        infinite={false}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}